"""
Don't do feature extraction, just add `.bin` to files and copy.
"""
import os
import re
import shutil
from typing import List

# Global variables for input and output directories
INPUT_DIR1 = "dataset/malicious"
INPUT_DIR2 = "dataset/benign"
OUTPUT_DIR1 = "features/malicious"
OUTPUT_DIR2 = "features/benign"
# Replace it with `None` for all files
MAX_NUM_FILE_TYPE = 1200


def create_output_directories() -> None:
    """
    Creates the output directories if they do not already exist.
    """
    os.makedirs(OUTPUT_DIR1, exist_ok=True)
    os.makedirs(OUTPUT_DIR2, exist_ok=True)


def find_exe_files(directory) -> List[str]:
    """
    Finds all .exe files in the specified directory
    :param directory: The directory path to search in.
    :returns: A list of full paths to the .exe files found.
    """
    exe_pattern = re.compile(r".*\.exe$", re.IGNORECASE)  # Regex to match .exe files

    # Using scandir and list comprehension to collect .exe files
    exe_files = [
        entry.path for entry in os.scandir(directory)
        if entry.is_file() and (exe_pattern.match(entry.name) or len(entry.path) > 60)
    ]

    return exe_files


if __name__ == "__main__":
    # Ensure output directories are created
    create_output_directories()

    # Find all .exe files in the input directories
    input_file_list_a = find_exe_files(INPUT_DIR1)
    input_file_list_b = find_exe_files(INPUT_DIR2)

    if MAX_NUM_FILE_TYPE is not None:
        input_file_list_a = input_file_list_a[:MAX_NUM_FILE_TYPE]
        input_file_list_b = input_file_list_b[:MAX_NUM_FILE_TYPE]

    # Print the found .exe files from each directory
    print(f"Found {len(input_file_list_a)} .exe files in {INPUT_DIR1}:")

    print(f"\nFound {len(input_file_list_b)} .exe files in {INPUT_DIR2}:")

    for file_path in input_file_list_a:
        shutil.copy(
            file_path,
            OUTPUT_DIR1 + file_path[file_path.rfind(os.path.sep):file_path.rfind(".")] + ".bin"
        )

    for file_path in input_file_list_b:
        shutil.copy(
            file_path,
            OUTPUT_DIR2 + file_path[file_path.rfind(os.path.sep):file_path.rfind(".")] + ".bin"
        )
