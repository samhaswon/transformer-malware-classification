"""
A script to set up the training and eval directories.
It is not dependent on feature extraction method.
"""
import os
import shutil


FEATURES_DIR = "features/"
MALICIOUS_NAME = "malicious/"
BENIGN_NAME = "benign/"
NUM_EVAL = 200


def create_output_directories() -> None:
    """
    Creates the output directories if they do not already exist.
    """
    os.makedirs(FEATURES_DIR + "train/" + MALICIOUS_NAME, exist_ok=True)
    os.makedirs(FEATURES_DIR + "eval/" + BENIGN_NAME, exist_ok=True)


if __name__ == '__main__':
    malicious_files = [
        entry.name for entry in os.scandir(FEATURES_DIR + MALICIOUS_NAME)
        if entry.is_file()
    ]
    benign_files = [
        entry.name for entry in os.scandir(FEATURES_DIR + BENIGN_NAME)
        if entry.is_file()
    ]
    eval_malicious = malicious_files[:NUM_EVAL]
    eval_benign = benign_files[:NUM_EVAL]
    train_malicious = malicious_files[NUM_EVAL:]
    train_benign = benign_files[NUM_EVAL:]

    for file_name in eval_malicious:
        shutil.move(
            FEATURES_DIR + MALICIOUS_NAME + file_name,
            FEATURES_DIR + "eval/" + MALICIOUS_NAME + file_name
        )
    for file_name in eval_benign:
        shutil.move(
            FEATURES_DIR + BENIGN_NAME + file_name,
            FEATURES_DIR + "eval/" + BENIGN_NAME + file_name
        )

    for file_name in train_malicious:
        shutil.move(
            FEATURES_DIR + MALICIOUS_NAME + file_name,
            FEATURES_DIR + "train/" + MALICIOUS_NAME + file_name
        )
    for file_name in train_benign:
        shutil.move(
            FEATURES_DIR + BENIGN_NAME + file_name,
            FEATURES_DIR + "train/" + BENIGN_NAME + file_name
        )

    os.rmdir(FEATURES_DIR + BENIGN_NAME)
    os.rmdir(FEATURES_DIR + MALICIOUS_NAME)
