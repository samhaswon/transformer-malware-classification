"""
A custom decoder for binary classification
"""
from torch import nn


class BinaryClassificationDecoder(nn.Module):
    """
    A custom decoder for binary classification with PyTorch's Transformer implementation
    """
    def __init__(self, input_size):
        super().__init__()
        # Linear layer that maps the input size to a single output
        self.fc = nn.Linear(input_size, 1)
        # Sigmoid to convert output into probability
        self.sigmoid = nn.Sigmoid()

    def forward(self, x, *args, **kwargs):
        """
        Network forward pass
        :param x: The input tensor to process
        :return: The single output feature
        """
        # pylint: disable=unused-argument
        x = self.fc(x)
        return self.sigmoid(x)  # Sigmoid for binary classification
